'Sweetwater Bioretention Project - Gainesville, FL
'written by J. Barrett Carter and Ben Weeks
'July 20, 2022

'This is the program for collecting flow-weighted samples from the
'stormwater exiting each of the four cells in the bioretention pond.

'This program multiplexes the sensor data by triggering relays with 
'four of the control ports and reading the sensor data using one of the 
'control ports.

'The program will also be used to measure water level in the pond

'CR1000X Series

SequentialMode

'Declare Variables and Units
'General Variables
Public BattV
Public PTemp_C
Public Temp_C
Public Flow_cum_dt As Float

'Variables repeated for each cell
'Cell 1
Public Range_mm_st_1 As String * 100
Public Num_bytes_1
Public Range_mm_1 As Float
Public Depth_mm_1 As Float
Public Depth_orf_1 As Float
Public Depth_weir_1 As Float
Public Flow_total_1 As Float
Public Flow_weir_1 As Float
Public Flow_orf_1 As Float
Public Flow_cum_1 = 0.0
Public Samples_collected_1

'Cell 2
Public Range_mm_st_2 As String * 100
Public Num_bytes_2
Public Range_mm_2 As Float
Public Depth_mm_2 As Float
Public Depth_orf_2 As Float
Public Depth_weir_2 As Float
Public Flow_total_2 As Float
Public Flow_weir_2 As Float
Public Flow_orf_2 As Float
Public Flow_cum_2 = 0.0
Public Samples_collected_2

'Cell 3
Public Range_mm_st_3 As String * 100
Public Num_bytes_3
Public Range_mm_3 As Float
Public Depth_mm_3 As Float
Public Depth_orf_3 As Float
Public Depth_weir_3 As Float
Public Flow_total_3 As Float
Public Flow_weir_3 As Float
Public Flow_orf_3 As Float
Public Flow_cum_3 = 0.0
Public Samples_collected_3

'Cell 4
Public Range_mm_st_4 As String * 100
Public Num_bytes_4
Public Range_mm_4 As Float
Public Depth_mm_4 As Float
Public Depth_orf_4 As Float
Public Depth_weir_4 As Float
Public Flow_total_4 As Float
Public Flow_weir_4 As Float
Public Flow_orf_4 As Float
Public Flow_cum_4 = 0.0
Public Samples_collected_4

'Pond
Public Range_mm_st_p As String * 100
Public Num_bytes_p
Public Range_mm_p As Float
Public Depth_mm_p As Float

'Define Units
Units BattV=Volts
Units PTemp_C=Deg C
Units Temp_C=Deg C
Units Flow_cum_dt = Sec

Units Range_mm_1 = mm
Units Depth_mm_1 = mm
Units Depth_orf_1 = mm
Units Depth_weir_1 = mm
Units Flow_total_1 = cfs
Units Flow_weir_1 = cfs
Units Flow_orf_1 = cfs
Units Flow_cum_1 = cf

Units Range_mm_2 = mm
Units Depth_mm_2 = mm
Units Depth_orf_2 = mm
Units Depth_weir_2 = mm
Units Flow_total_2 = cfs
Units Flow_weir_2 = cfs
Units Flow_orf_2 = cfs
Units Flow_cum_2 = cf

Units Range_mm_3 = mm
Units Depth_mm_3 = mm
Units Depth_orf_3 = mm
Units Depth_weir_3 = mm
Units Flow_total_3 = cfs
Units Flow_weir_3 = cfs
Units Flow_orf_3 = cfs
Units Flow_cum_3 = cf

Units Range_mm_4 = mm
Units Depth_mm_4 = mm
Units Depth_orf_4 = mm
Units Depth_weir_4 = mm
Units Flow_total_4 = cfs
Units Flow_weir_4 = cfs
Units Flow_orf_4 = cfs
Units Flow_cum_4 = cf

'Define Constants
'General
Const Ang_weir As Float = 60 ' Angle of the weir in degrees
Const Sampler_flow_thresh As Float = 16 'flow threshold for sample to be collected in ft^3
Const Dens_water As Float = 1000 ' density of water in kg/m^3
Const g As Float = 9.81 ' acceleration due to gravity in kg m/s^2
Const C_weir As Float = 0.607165052-0.000874466963*Ang_weir+0.00000610393334*Ang_weir^2
Const k_weir As Float = 0.0144902648 - 0.00033955535*Ang_weir  + 0.00000329819003*Ang_weir^2 _
- 0.0000000106215442*Ang_weir^3
Const pi As Float = 3.14159
Const H_orf As Float = 0 ' Distance between floor and bottom of orifice in mm
Const C_orf As Float = 0.6 ' Orifice discharge coefficient
Const D_orf As Float = 5/16*25.4 'diameter of the orifice in mm
Const H_min As Float = 2 ' minimum depth to begin calculating flow in mm
Const H_max As Float = 4*25.4 ' maximum depth of weir in mm
Const Delay_1 As Float = 7 ' for sensor multiplexing
Const Delay_2 As Float = 2 ' for sensor multiplexing
Const Delay_option = 2

'Cell 1
Const H_gap_1 As Float = (9+3/16)*25.4-2 ' Distance between floor and bottom of weir in mm
Const Datum_1 As Float = (26+11/16)*25.4 ' distance to the floor/bottom (depth = 0) in mm

'Cell 2
Const H_gap_2 As Float = (9+3/8)*25.4-3 ' Distance between floor and bottom of weir in mm
Const Datum_2 As Float = (26+11/16)*25.4 ' distance to the floor/bottom (depth = 0) in mm

'Cell 3
Const H_gap_3 As Float = (2+7/8)*25.4+1 ' Distance between floor and bottom of weir in mm
Const Datum_3 As Float = (20+11/16)*25.4 ' distance to the floor/bottom (depth = 0) in mm

'Cell 4
Const H_gap_4 As Float = (2+7/8)*25.4+3 ' Distance between floor and bottom of weir in mm
Const Datum_4 As Float = (21+1/16)*25.4 ' distance to the floor/bottom (depth = 0) in mm

'Pond
Const Datum_p As Float = 1400 ' distance to the floor/bottom (depth = 0) in mm

'Define Data Tables
DataTable(FiveMinute,True,-1)
  DataInterval(0,5,Min,10)
  TableFile("CRD:Sweetwater_Outflow",64,-1,0,1,Day,0,0)
	Average(1,Temp_C,FP2,False)
	Average(1,BattV,FP2,False)
  
	Average(1,Range_mm_1,FP2,False)
	Average(1,Depth_mm_1,FP2,False)
	Average(1,Depth_weir_1,FP2,False)
	Average(1,Flow_total_1,FP2,False)
	Totalize(1,Samples_collected_1,FP2,False)
	
	Average(1,Range_mm_2,FP2,False)
	Average(1,Depth_mm_2,FP2,False)
	Average(1,Depth_weir_2,FP2,False)
	Average(1,Flow_total_2,FP2,False)
	Totalize(1,Samples_collected_2,FP2,False)
	
  Average(1,Range_mm_3,FP2,False)
	Average(1,Depth_mm_3,FP2,False)
	Average(1,Depth_weir_3,FP2,False)
	Average(1,Flow_total_3,FP2,False)
	Totalize(1,Samples_collected_3,FP2,False)
	
  Average(1,Range_mm_4,FP2,False)
	Average(1,Depth_mm_4,FP2,False)
	Average(1,Depth_weir_4,FP2,False)
	Average(1,Flow_total_4,FP2,False)
	Totalize(1,Samples_collected_4,FP2,False)
	
  Average(1,Range_mm_p,FP2,False)
	Average(1,Depth_mm_p,FP2,False)
	
EndTable


'Questions to be answered: how do the scan interval and the portset intervals intereact with their respective data averaging.
'Main Program
BeginProg
  
  SerialOpen(ComC5,9600,16,0,100,1) 'for cells 1 - 4 sensors
  SerialOpen(ComC7,9600,16,0,100,1) 'for pond sensor

	'Main Scan                         Edit: (this will need to mesh with the sensing requirments of the switching sensors (>=7secx4)
	Scan(50,Sec,3,0)
		'Default CR1000X Datalogger Battery Voltage measurement 'BattV'
		Battery(BattV)
		'Default CR1000X Datalogger Wiring Panel Temperature measurement 'PTemp_C'
		PanelTemp(PTemp_C,60)
		'Type T Thermocouple measurements 'Temp_C'
		TCDiff(Temp_C,1,mv200C,1,TypeT,PTemp_C,True,0,60,1,0)
		
    'Reset sample count
    Samples_collected_1 = 0
    Samples_collected_2 = 0
    Samples_collected_3 = 0
    Samples_collected_4 = 0
    
    ' Bring in data from range sensor and calculate depth.
    'Edit: We will bring in data from one com channel now so the range data will depend on the portset per scan sequence. this will be com channel 5 since 1 2 3 & 4 will be used for switching the relays
    
'Cell 1
    PortSet(C1,1)           
		'Note:Each Trigger will need a couple delays. One for ranging and one for self cleaning. 
		'Note: Data sheet page 10 shows the timing sequence for the data styles.
		'Minimum delay before taking sensor reading is 139 ms.
		SerialFlush(C5)
		Delay (Delay_option,Delay_1,Sec)                
    SerialInRecord(ComC5,Range_mm_st_1,82,0,&H0D,Num_bytes_1,101)

    Range_mm_1 = Range_mm_st_1
		Depth_mm_1 = Datum_1 - Range_mm_1
		Delay(Delay_option,Delay_2,Sec)              'Note: after 1818mS the serial data will have been collected and the self cleaning will have been completed
    PortSet(C1,0)
    Delay(Delay_option,Delay_2,Sec)

'Cell 2
   'PortSet(Switch_2, HIGH)
    PortSet(C2,1) 'sets command port 1 high
    SerialFlush(C5)
    Delay (Delay_option,Delay_1,Sec)
    SerialInRecord(ComC5,Range_mm_st_2,82,0,&H0D,Num_bytes_2,101)

    Range_mm_2 = Range_mm_st_2
		Depth_mm_2 = Datum_2 - Range_mm_2
		Delay(Delay_option,Delay_2,Sec)
		PortSet(C2,0)
		Delay(Delay_option,Delay_2,Sec)

'Cell 3
    PortSet(C3,1)
    SerialFlush(C5)          
    Delay (Delay_option,Delay_1,Sec)
    SerialInRecord(ComC5,Range_mm_st_3,82,0,&H0D,Num_bytes_3,101)
    
    Range_mm_3 = Range_mm_st_3
		Depth_mm_3 = Datum_3 - Range_mm_3
		Delay(Delay_option,Delay_2,Sec)
		PortSet(C3,0)
		Delay(Delay_option,Delay_2,Sec)
'Cell 4
    PortSet(C4,1)
    SerialFlush(C5) 
    Delay(Delay_option,Delay_1,Sec)
    SerialInRecord(ComC5,Range_mm_st_4,82,0,&H0D,Num_bytes_4,101)
    
    Range_mm_4 = Range_mm_st_4
		Depth_mm_4 = Datum_4 - Range_mm_4
		Delay(Delay_option,Delay_2,Sec)
		PortSet(C4,0)
		Delay(Delay_option,Delay_2,Sec)
    SerialInRecord(ComC7,Range_mm_st_p,82,0,&H0D,Num_bytes_p,01)
    Range_mm_p = Range_mm_st_p
		Depth_mm_p = Datum_p - Range_mm_p
    ' Calculate flow rates
    'Cell 1
'    If Depth_mm_1 < H_min Then
'      Depth_weir_1 = 0
'      Depth_orf_1 = 0
'      Flow_weir_1 = 0
'      Flow_orf_1 = 0
'      
'    Else 
'      Depth_orf_1 = Depth_mm_1-H_orf
'      Flow_orf_1 = C_orf*pi/4*(D_orf/1000)^2*(2*Depth_orf_1/1000*Dens_water*g _
'      *Dens_water)^(1/2)/Dens_water*35.3
'      If Depth_mm_1 < H_gap_1 Then
'        Depth_weir_1 = 0
'        Flow_weir_1 = 0
'      Else
'        Depth_weir_1 = Depth_mm_1 - H_gap_1
'        Flow_weir_1 = 4.28*C_weir*TAN(Ang_weir*pi/180/2)*(Depth_weir_1/25.4/12+k_weir)^(5/2)
'      EndIf
'    EndIf
'    
'    Flow_total_1 = Flow_orf_1 + Flow_weir_1
'    
'    'Cell 2
'    If Depth_mm_2 < H_min Then
'      Depth_weir_2 = 0
'      Depth_orf_2 = 0
'      Flow_weir_2 = 0
'      Flow_orf_2 = 0
'      
'    Else 
'      Depth_orf_2 = Depth_mm_2-H_orf
'      Flow_orf_2 = C_orf*pi/4*(D_orf/1000)^2*(2*Depth_orf_2/1000*Dens_water*g _
'      *Dens_water)^(1/2)/Dens_water*35.3
'      If Depth_mm_2 < H_gap_2 Then
'        Depth_weir_2 = 0
'        Flow_weir_2 = 0
'      Else
'        Depth_weir_2 = Depth_mm_2 - H_gap_2
'        Flow_weir_2 = 4.28*C_weir*TAN(Ang_weir*pi/180/2)*(Depth_weir_2/25.4/12+k_weir)^(5/2)
'      EndIf
'    EndIf
'    
'    Flow_total_2 = Flow_orf_2 + Flow_weir_2
'    
'    'Cell 3
'    If Depth_mm_3 < H_min Then
'      Depth_weir_3 = 0
'      Depth_orf_3 = 0
'      Flow_weir_3 = 0
'      Flow_orf_3 = 0
'      
'    Else 
'      Depth_orf_3 = Depth_mm_3-H_orf
'      Flow_orf_3 = C_orf*pi/4*(D_orf/1000)^2*(2*Depth_orf_3/1000*Dens_water*g _
'      *Dens_water)^(1/2)/Dens_water*35.3
'      If Depth_mm_3 < H_gap_3 Then
'        Depth_weir_3 = 0
'        Flow_weir_3 = 0
'      Else
'        Depth_weir_3 = Depth_mm_3 - H_gap_3
'        Flow_weir_3 = 4.28*C_weir*TAN(Ang_weir*pi/180/2)*(Depth_weir_3/25.4/12+k_weir)^(5/2)
'      EndIf
'    EndIf
'    
'    Flow_total_3 = Flow_orf_3 + Flow_weir_3
'    
'    'Cell 4
'    If Depth_mm_4 < H_min Then
'      Depth_weir_4 = 0
'      Depth_orf_4 = 0
'      Flow_weir_4 = 0
'      Flow_orf_4 = 0
'      
'    Else 
'      Depth_orf_4 = Depth_mm_4-H_orf
'      Flow_orf_4 = C_orf*pi/4*(D_orf/1000)^2*(2*Depth_orf_4/1000*Dens_water*g _
'      *Dens_water)^(1/2)/Dens_water*35.3
'      If Depth_mm_4 < H_gap_4 Then
'        Depth_weir_4 = 0
'        Flow_weir_4 = 0
'      Else
'        Depth_weir_4 = Depth_mm_4 - H_gap_4
'        Flow_weir_4 = 4.28*C_weir*TAN(Ang_weir*pi/180/2)*(Depth_weir_4/25.4/12+k_weir)^(5/2)
'      EndIf
'    EndIf
'    
'    Flow_total_4 = Flow_orf_4 + Flow_weir_4
'    
'    'Flow accumulation
'    Flow_cum_dt = Timer(1,0,4)/10^6
'    Timer(1,0,2)
'    
'    'Cell 1
'    If Flow_total_1 <> NAN Then
'      Flow_cum_1 += Flow_total_1*Flow_cum_dt
'    EndIf
'    'Cell 2
'    If Flow_total_2 <> NAN Then
'      Flow_cum_2 += Flow_total_2*Flow_cum_dt
'    EndIf
'    'Cell 3
'    If Flow_total_3 <> NAN Then
'      Flow_cum_3 += Flow_total_3*Flow_cum_dt
'    EndIf
'    'Cell 4
'    If Flow_total_4 <> NAN Then
'      Flow_cum_4 += Flow_total_4*Flow_cum_dt
'    EndIf

    If ((Depth_mm_1 < H_min)OR(Range_mm_1 = NAN)OR(Range_mm_1 = 300)) Then
      Depth_weir_1 = 0
      Depth_orf_1 = 0
      Flow_weir_1 = 0
      Flow_orf_1 = 0
          
    ElseIf Depth_mm_1 < (H_gap_1+H_min) Then
      Depth_weir_1 = 0
      Flow_weir_1 = 0
      Flow_orf_1 = 0
          
    ElseIf Depth_mm_1 < (H_gap_1+H_max) Then
      Depth_weir_1 = Depth_mm_1 - H_gap_1
      Flow_weir_1 = 4.28*C_weir*TAN(Ang_weir*pi/180/2)*(Depth_weir_1/25.4/12+k_weir)^(5/2)
      Flow_orf_1 = 0
    Else
      Depth_weir_1 = H_max
      Flow_weir_1 = 4.28*C_weir*TAN(Ang_weir*pi/180/2)*(Depth_weir_1/25.4/12+k_weir)^(5/2)
      Flow_orf_1 = 0

    EndIf
    
    Flow_total_1 = Flow_orf_1 + Flow_weir_1
    
    'Cell 2
    If ((Depth_mm_2 < H_min)OR(Range_mm_2 = NAN)OR(Range_mm_2 = 300)) Then
      Depth_weir_2 = 0
      Depth_orf_2 = 0
      Flow_weir_2 = 0
      Flow_orf_2 = 0
          
    ElseIf Depth_mm_2 < (H_gap_2+H_min) Then
      Depth_weir_2 = 0
      Flow_weir_2 = 0
      Flow_orf_2 = 0
          
    ElseIf Depth_mm_2 < (H_gap_2+H_max) Then
      Depth_weir_2 = Depth_mm_2 - H_gap_2
      Flow_weir_2 = 4.28*C_weir*TAN(Ang_weir*pi/180/2)*(Depth_weir_2/25.4/12+k_weir)^(5/2)
      Flow_orf_2 = 0
    Else
      Depth_weir_2 = H_max
      Flow_weir_2 = 4.28*C_weir*TAN(Ang_weir*pi/180/2)*(Depth_weir_2/25.4/12+k_weir)^(5/2)
      Flow_orf_2 = 0

    EndIf
    
    Flow_total_2 = Flow_orf_2 + Flow_weir_2
    
    'Cell 3
    If ((Depth_mm_3 < H_min)OR(Range_mm_3 = NAN)OR(Range_mm_3 = 300)) Then
      Depth_weir_3 = 0
      Depth_orf_3 = 0
      Flow_weir_3 = 0
      Flow_orf_3 = 0
          
    ElseIf Depth_mm_3 < (H_gap_3+H_min) Then
      Depth_weir_3 = 0
      Flow_weir_3 = 0
      Flow_orf_3 = 0
          
    ElseIf Depth_mm_3 < (H_gap_3+H_max) Then
      Depth_weir_3 = Depth_mm_3 - H_gap_3
      Flow_weir_3 = 4.28*C_weir*TAN(Ang_weir*pi/180/2)*(Depth_weir_3/25.4/12+k_weir)^(5/2)
      Flow_orf_3 = 0
    Else
      Depth_weir_3 = H_max
      Flow_weir_3 = 4.28*C_weir*TAN(Ang_weir*pi/180/2)*(Depth_weir_3/25.4/12+k_weir)^(5/2)
      Flow_orf_3 = 0

    EndIf
    
    Flow_total_3 = Flow_orf_3 + Flow_weir_3
    
    'Cell 4
    If ((Depth_mm_4 < H_min)OR(Range_mm_4 = NAN)OR(Range_mm_4 = 300)) Then
      Depth_weir_4 = 0
      Depth_orf_4 = 0
      Flow_weir_4 = 0
      Flow_orf_4 = 0
          
    ElseIf Depth_mm_4 < (H_gap_4+H_min) Then
      Depth_weir_4 = 0
      Flow_weir_4 = 0
      Flow_orf_4 = 0
          
    ElseIf Depth_mm_4 < (H_gap_4+H_max) Then
      Depth_weir_4 = Depth_mm_4 - H_gap_4
      Flow_weir_4 = 4.28*C_weir*TAN(Ang_weir*pi/180/2)*(Depth_weir_4/25.4/12+k_weir)^(5/2)
      Flow_orf_4 = 0
    Else
      Depth_weir_4 = H_max
      Flow_weir_4 = 4.28*C_weir*TAN(Ang_weir*pi/180/2)*(Depth_weir_4/25.4/12+k_weir)^(5/2)
      Flow_orf_4 = 0

    EndIf
    
    Flow_total_4 = Flow_orf_4 + Flow_weir_4
    
    'Flow accumulation
    Flow_cum_dt = Timer(1,0,4)/10^6
    Timer(1,0,2)
    
    'Cell 1
    If Flow_total_1 <> NAN Then
      Flow_cum_1 += Flow_total_1*Flow_cum_dt
    EndIf
    'Cell 2
    If Flow_total_2 <> NAN Then
      Flow_cum_2 += Flow_total_2*Flow_cum_dt
    EndIf
    'Cell 3
    If Flow_total_3 <> NAN Then
      Flow_cum_3 += Flow_total_3*Flow_cum_dt
    EndIf
    'Cell 4
    If Flow_total_4 <> NAN Then
      Flow_cum_4 += Flow_total_4*Flow_cum_dt
    EndIf

    'Trigger Autosamplers
    'Cell 1
    If Flow_cum_1 > Sampler_flow_thresh Then
      SWVX(VX1,1,1)
      Delay(1,25,1)
      SWVX(VX1,0,1)
      Flow_cum_1 = 0  'Reset cumulative flow
      Samples_collected_1 = 1
    EndIf
    
    'Cell 2
    If Flow_cum_2 > Sampler_flow_thresh Then
      SWVX(VX2,1,1)
      Delay(1,25,1)
      SWVX(VX2,0,1)
      Flow_cum_2 = 0  'Reset cumulative flow
      Samples_collected_2 = 1
    EndIf
    
    'Cell 3
    If Flow_cum_3 > Sampler_flow_thresh Then
      SWVX(VX3,1,1)
      Delay(1,25,1)
      SWVX(VX3,0,1)
      Flow_cum_3 = 0  'Reset cumulative flow
      Samples_collected_3 = 1
    EndIf
    
    'Cell 4
    If Flow_cum_4 > Sampler_flow_thresh Then
      SWVX(VX4,1,1)
      Delay(1,25,1)
      SWVX(VX4,0,1)
      Flow_cum_4 = 0  'Reset cumulative flow
      Samples_collected_4 = 1
    EndIf
    
		'Call Data Tables and Store Data
		CallTable FiveMinute
	NextScan
EndProg
