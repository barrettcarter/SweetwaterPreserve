'Sweetwater Bioretention Project - Gainesville, FL
'written by J. Barrett Carter
'March 9, 2022

'This is the program for collecting flow-weighted samples from the
'stormwater exiting each of the four cells in the bioretention pond.

'The program will also be used to measure water level in the pond and to
'collect rain data.

'CR1000X Series

SequentialMode

'Declare Variables and Units
'General Variables
Public BattV
Public PTemp_C
Public Temp_C
Public Flow_cum_dt As Float

'Pond Variables
Public Range_mm_p As Float
Public Depth_mm_p As Float

'Rain Variables
Public Rain_in

'Variables repeated for each cell
'Cell 1
Public Range_mm_st_1 As String * 100
Public Num_bytes_1
Public Range_mm_1 As Float
Public Depth_mm_1 As Float
Public Depth_orf_1 As Float
Public Depth_weir_1 As Float
Public Flow_total_1 As Float
Public Flow_weir_1 As Float
Public Flow_orf_1 As Float
Public Flow_cum_1 = 0.0

'Cell 2
Public Range_mm_st_2 As String * 100
Public Num_bytes_2
Public Range_mm_2 As Float
Public Depth_mm_2 As Float
Public Depth_orf_2 As Float
Public Depth_weir_2 As Float
Public Flow_total_2 As Float
Public Flow_weir_2 As Float
Public Flow_orf_2 As Float
Public Flow_cum_2 = 0.0

'Cell 3
Public Range_mm_st_3 As String * 100
Public Num_bytes_3
Public Range_mm_3 As Float
Public Depth_mm_3 As Float
Public Depth_orf_3 As Float
Public Depth_weir_3 As Float
Public Flow_total_3 As Float
Public Flow_weir_3 As Float
Public Flow_orf_3 As Float
Public Flow_cum_3 = 0.0

'Cell 4
Public Range_mm_st_4 As String * 100
Public Num_bytes_4
Public Range_mm_4 As Float
Public Depth_mm_4 As Float
Public Depth_orf_4 As Float
Public Depth_weir_4 As Float
Public Flow_total_4 As Float
Public Flow_weir_4 As Float
Public Flow_orf_4 As Float
Public Flow_cum_4 = 0.0

'Define Units
Units BattV=Volts
Units PTemp_C=Deg C
Units Temp_C=Deg C
Units Flow_cum_dt = Sec

Units Range_mm_1 = mm
Units Depth_mm_1 = mm
Units Depth_orf_1 = mm
Units Depth_weir_1 = mm
Units Flow_total_1 = cfs
Units Flow_weir_1 = cfs
Units Flow_orf_1 = cfs
Units Flow_cum_1 = cf

Units Range_mm_2 = mm
Units Depth_mm_2 = mm
Units Depth_orf_2 = mm
Units Depth_weir_2 = mm
Units Flow_total_2 = cfs
Units Flow_weir_2 = cfs
Units Flow_orf_2 = cfs
Units Flow_cum_2 = cf

Units Range_mm_3 = mm
Units Depth_mm_3 = mm
Units Depth_orf_3 = mm
Units Depth_weir_3 = mm
Units Flow_total_3 = cfs
Units Flow_weir_3 = cfs
Units Flow_orf_3 = cfs
Units Flow_cum_3 = cf

Units Range_mm_4 = mm
Units Depth_mm_4 = mm
Units Depth_orf_4 = mm
Units Depth_weir_4 = mm
Units Flow_total_4 = cfs
Units Flow_weir_4 = cfs
Units Flow_orf_4 = cfs
Units Flow_cum_4 = cf

'Define Constants
'General
Const Ang_weir = 60 ' Angle of the weir in degrees
Const Sampler_flow_thresh = 16 'flow threshold for sample to be collected in ft^3
Const Dens_water = 1000 ' density of water in kg/m^3
Const g = 9.81 ' acceleration due to gravity in kg m/s^2
Const C_weir = 0.607165052-0.000874466963*Ang_weir+0.00000610393334*Ang_weir^2
Const k_weir = 0.0144902648 - 0.00033955535*Ang_weir  + 0.00000329819003*Ang_weir^2 _
- 0.0000000106215442*Ang_weir^3
Const pi = 3.14159
Const H_orf = 0 ' Distance between floor and bottom of orifice in mm
Const C_orf = 0.6 ' Orifice discharge coefficient
Const D_orf = 5/16*25.4 'diameter of the orifice in mm
Const H_min = 10 ' minimum depth to begin calculating flow in mm

'Pond
Const Datum_p = 5*12*25.4 'Distance to pond bottom in mm

'Cell 1
Const H_gap_1 = 9*25.4 ' Distance between floor and bottom of weir in mm
Const Datum_1 = 13*25.4 ' distance to the floor/bottom (depth = 0) in mm

'Cell 2
Const H_gap_2 = 9*25.4 ' Distance between floor and bottom of weir in mm
Const Datum_2 = 13*25.4 ' distance to the floor/bottom (depth = 0) in mm

'Cell 3
Const H_gap_3 = 3*25.4 ' Distance between floor and bottom of weir in mm
Const Datum_3 = 7*25.4 ' distance to the floor/bottom (depth = 0) in mm

'Cell 4
Const H_gap_4 = 3*25.4 ' Distance between floor and bottom of weir in mm
Const Datum_4 = 7*25.4 ' distance to the floor/bottom (depth = 0) in mm

'Define Data Tables
DataTable(FiveMinute,True,-1)
  DataInterval(0,5,Min,0)
  TableFile("CRD:Sweetwater_Outflow",64,-1,0,1,Day,0,0)
	
  Average(1,Temp_C,FP2,False)
	Average(1,BattV,FP2,False)
	Average(1,PTemp_C,FP2,False)
	
  Totalize(1,Rain_in,FP2,False)
  
  Average(1,Range_mm_p,FP2,False)
  Average(1,Depth_mm_p,FP2,False)
	
	Average(1,Range_mm_1,FP2,False)
	Average(1,Depth_mm_1,FP2,False)
	Average(1,Flow_total_1,FP2,False)
	
	Average(1,Range_mm_2,FP2,False)
	Average(1,Depth_mm_2,FP2,False)
	Average(1,Flow_total_2,FP2,False)
	
  Average(1,Range_mm_3,FP2,False)
	Average(1,Depth_mm_3,FP2,False)
	Average(1,Flow_total_3,FP2,False)
	
  Average(1,Range_mm_4,FP2,False)
	Average(1,Depth_mm_4,FP2,False)
	Average(1,Flow_total_4,FP2,False)
EndTable

'Main Program
BeginProg
  SerialOpen(ComC1,9600,16,0,100) 'for cell 1 sensor
  SerialOpen(ComC3,9600,16,0,100) 'for cell 2 sensor
  SerialOpen(ComC5,9600,16,0,100) 'for cell 3 sensor
  SerialOpen(ComC7,9600,16,0,100) 'for cell 4 sensor
	'Main Scan
	Scan(10,Sec,3,0)
		'Default CR1000X Datalogger Battery Voltage measurement 'BattV'
		Battery(BattV)
		'Default CR1000X Datalogger Wiring Panel Temperature measurement 'PTemp_C'
		PanelTemp(PTemp_C,60)
		'Type T Thermocouple measurements 'Temp_C'
		TCDiff(Temp_C,1,mv200C,1,TypeT,PTemp_C,True,0,60,1,0)
    'Get rain measurement
    PulseCount(Rain_in,1,P1,1,0,0.01,0)
    
    ' Bring in data from range sensors and calculate depth
    VoltSe (Range_mm_p,1,mv5000C,3,1,0,15000,1.024,0) 'for pond sensor
		SerialInRecord(ComC1,Range_mm_st_1,82,0,&H0D,Num_bytes_1,00) 'cell 1
		SerialInRecord(ComC3,Range_mm_st_2,82,0,&H0D,Num_bytes_2,00) ' cell 2
		SerialInRecord(ComC5,Range_mm_st_3,82,0,&H0D,Num_bytes_3,00) 'cell 3
		SerialInRecord(ComC7,Range_mm_st_4,82,0,&H0D,Num_bytes_4,00) 'cell 4
		
    Range_mm_1 = Range_mm_st_1
		Depth_mm_1 = Datum_1 - Range_mm_1
		
    Range_mm_2 = Range_mm_st_2
		Depth_mm_2 = Datum_2 - Range_mm_2
		
    Range_mm_3 = Range_mm_st_3
		Depth_mm_3 = Datum_3 - Range_mm_3
		
    Range_mm_4 = Range_mm_st_4
		Depth_mm_4 = Datum_4 - Range_mm_4
		
    Depth_mm_p = Datum_p - Range_mm_p
		
    ' Calculate flow rates
    'Cell 1
    If Depth_mm_1 < H_min Then
      Depth_weir_1 = 0
      Depth_orf_1 = 0
      Flow_weir_1 = 0
      Flow_orf_1 = 0
      
    Else 
      Depth_orf_1 = Depth_mm_1-H_orf
      Flow_orf_1 = C_orf*pi/4*(D_orf/1000)^2*(2*Depth_orf_1/1000*Dens_water*g _
      *Dens_water)^(1/2)/Dens_water*35.3
      If Depth_mm_1 < H_gap_1 Then
        Depth_weir_1 = 0
        Flow_weir_1 = 0
      Else
        Depth_weir_1 = Depth_mm_1 - H_gap_1
        Flow_weir_1 = 4.28*C_weir*TAN(Ang_weir*pi/180/2)*(Depth_weir_1/25.4/12+k_weir)^(5/2)
      EndIf
    EndIf
    
    Flow_total_1 = Flow_orf_1 + Flow_weir_1
    
    'Cell 2
    If Depth_mm_2 < H_min Then
      Depth_weir_2 = 0
      Depth_orf_2 = 0
      Flow_weir_2 = 0
      Flow_orf_2 = 0
      
    Else 
      Depth_orf_2 = Depth_mm_2-H_orf
      Flow_orf_2 = C_orf*pi/4*(D_orf/1000)^2*(2*Depth_orf_2/1000*Dens_water*g _
      *Dens_water)^(1/2)/Dens_water*35.3
      If Depth_mm_2 < H_gap_2 Then
        Depth_weir_2 = 0
        Flow_weir_2 = 0
      Else
        Depth_weir_2 = Depth_mm_2 - H_gap_2
        Flow_weir_2 = 4.28*C_weir*TAN(Ang_weir*pi/180/2)*(Depth_weir_2/25.4/12+k_weir)^(5/2)
      EndIf
    EndIf
    
    Flow_total_2 = Flow_orf_2 + Flow_weir_2
    
    'Cell 3
    If Depth_mm_3 < H_min Then
      Depth_weir_3 = 0
      Depth_orf_3 = 0
      Flow_weir_3 = 0
      Flow_orf_3 = 0
      
    Else 
      Depth_orf_3 = Depth_mm_3-H_orf
      Flow_orf_3 = C_orf*pi/4*(D_orf/1000)^2*(2*Depth_orf_3/1000*Dens_water*g _
      *Dens_water)^(1/2)/Dens_water*35.3
      If Depth_mm_3 < H_gap_3 Then
        Depth_weir_3 = 0
        Flow_weir_3 = 0
      Else
        Depth_weir_3 = Depth_mm_3 - H_gap_3
        Flow_weir_3 = 4.28*C_weir*TAN(Ang_weir*pi/180/2)*(Depth_weir_3/25.4/12+k_weir)^(5/2)
      EndIf
    EndIf
    
    Flow_total_3 = Flow_orf_3 + Flow_weir_3
    
    'Cell 4
    If Depth_mm_4 < H_min Then
      Depth_weir_4 = 0
      Depth_orf_4 = 0
      Flow_weir_4 = 0
      Flow_orf_4 = 0
      
    Else 
      Depth_orf_4 = Depth_mm_4-H_orf
      Flow_orf_4 = C_orf*pi/4*(D_orf/1000)^2*(2*Depth_orf_4/1000*Dens_water*g _
      *Dens_water)^(1/2)/Dens_water*35.3
      If Depth_mm_4 < H_gap_4 Then
        Depth_weir_4 = 0
        Flow_weir_4 = 0
      Else
        Depth_weir_4 = Depth_mm_4 - H_gap_4
        Flow_weir_4 = 4.28*C_weir*TAN(Ang_weir*pi/180/2)*(Depth_weir_4/25.4/12+k_weir)^(5/2)
      EndIf
    EndIf
    
    Flow_total_4 = Flow_orf_4 + Flow_weir_4
    
    'Flow accumulation
    Flow_cum_dt = Timer(1,0,4)/10^6
    Timer(1,0,2)
    
    'Cell 1
    If Flow_total_1 <> NAN Then
      Flow_cum_1 += Flow_total_1*Flow_cum_dt
    EndIf
    'Cell 2
    If Flow_total_2 <> NAN Then
      Flow_cum_2 += Flow_total_2*Flow_cum_dt
    EndIf
    'Cell 3
    If Flow_total_3 <> NAN Then
      Flow_cum_3 += Flow_total_3*Flow_cum_dt
    EndIf
    'Cell 4
    If Flow_total_4 <> NAN Then
      Flow_cum_4 += Flow_total_4*Flow_cum_dt
    EndIf

    'Trigger Autosamplers
    'Cell 1
    If Flow_cum_1 > Sampler_flow_thresh Then
      SWVX(VX1,1,1)
      Delay(1,25,1)
      SWVX(VX1,0,1)
      Flow_cum_1 = 0  'Reset cumulative flow
    EndIf
    
    'Cell 2
    If Flow_cum_2 > Sampler_flow_thresh Then
      SWVX(VX2,1,1)
      Delay(1,25,1)
      SWVX(VX2,0,1)
      Flow_cum_2 = 0  'Reset cumulative flow
    EndIf
    
    'Cell 3
    If Flow_cum_3 > Sampler_flow_thresh Then
      SWVX(VX3,1,1)
      Delay(1,25,1)
      SWVX(VX3,0,1)
      Flow_cum_3 = 0  'Reset cumulative flow
    EndIf
    
    'Cell 4
    If Flow_cum_4 > Sampler_flow_thresh Then
      SWVX(VX4,1,1)
      Delay(1,25,1)
      SWVX(VX4,0,1)
      Flow_cum_4 = 0  'Reset cumulative flow
    EndIf
    
		'Call Data Tables and Store Data
		CallTable FiveMinute
	NextScan
EndProg
